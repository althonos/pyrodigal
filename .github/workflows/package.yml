name: Package

on:
  push:
    tags:
      - v*.*.*

jobs:

  wheel-linux:
    runs-on: ubuntu-latest
    name: Build Linux wheels
    strategy:
      matrix:
        include:
        - python-version: 3.5
          pyo3-python: /opt/python/cp35-cp35m/bin/python
          image-tag: 2020-12-11-f1e0e80
        - python-version: 3.6
          pyo3-python: /opt/python/cp36-cp36m/bin/python
          image-tag: 2021-05-18-1e72e6c
        - python-version: 3.7
          pyo3-python: /opt/python/cp37-cp37m/bin/python
          image-tag: latest
        - python-version: 3.8
          pyo3-python: /opt/python/cp38-cp38/bin/python
          image-tag: latest
        - python-version: 3.9
          pyo3-python: /opt/python/cp39-cp39/bin/python
          image-tag: latest
        - python-version: '3.10'
          pyo3-python: /opt/python/cp310-cp310/bin/python
          image-tag: latest
        - python-version: pypy-3.6
          pyo3-python: /opt/pypy/pypy3.6-7.3.3/bin/python
          image-tag: 2021-05-18-1e72e6c
        - python-version: pypy-3.7
          pyo3-python: /opt/pypy/pypy3.7-7.3.4/bin/python
          image-tag: 2021-05-18-1e72e6c
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Build manylinux wheels
      uses: addnab/docker-run-action@v2
      with:
        image: pypywheels/manylinux2010-pypy_x86_64:${{ matrix.image-tag }}
        options: -v ${{ github.workspace }}:/io -e TERM=$TERM
        shell: bash
        run: |
          ${{ matrix.pyo3-python }} -m pip install -U -r /io/.github/workflows/requirements.txt
          ${{ matrix.pyo3-python }} -m pip wheel -vv /io -w /tmp
          for whl in /tmp/*.whl; do ${{ matrix.pyo3-python }} -m auditwheel repair $whl -w /io/dist; done
    - name: Store built wheels
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist/*

  test-linux:
    runs-on: ubuntu-latest
    name: Test Linux wheels
    needs:
    - wheel-linux
    strategy:
      matrix:
        python-version:
        - 3.5
        - 3.6
        - 3.7
        - 3.8
        - 3.9
        - '3.10'
        - pypy-3.6
        - pypy-3.7
    steps:
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Download built wheels
      uses: actions/download-artifact@v2
      with:
          name: dist
          path: dist
    - name: Install built wheel
      run: python -m pip install --no-index --find-links=dist pyrodigal
    - name: Run tests without coverage
      run: python -m unittest pyrodigal.tests -vv

  wheel-linux-aarch64:
    runs-on: ubuntu-latest
    name: Build Linux Aarch64 wheels
    strategy:
      matrix:
        include:
        - python-version: 3.6
          pyo3-python: /opt/python/cp36-cp36m/bin/python
          image-tag: latest
        - python-version: 3.7
          pyo3-python: /opt/python/cp37-cp37m/bin/python
          image-tag: latest
        - python-version: 3.8
          pyo3-python: /opt/python/cp38-cp38/bin/python
          image-tag: latest
        - python-version: 3.9
          pyo3-python: /opt/python/cp39-cp39/bin/python
          image-tag: latest
        - python-version: '3.10'
          pyo3-python: /opt/python/cp310-cp310/bin/python
          image-tag: latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Build manylinux wheels
      uses: addnab/docker-run-action@v2
      with:
        image: quay.io/pypa/manylinux2014_aarch64:${{ matrix.image-tag }}
        options: -v ${{ github.workspace }}:/io -e TERM=$TERM
        shell: bash
        run: |
          ${{ matrix.pyo3-python }} -m pip install -U -r /io/.github/workflows/requirements.txt
          ${{ matrix.pyo3-python }} -m pip wheel -vv /io -w /tmp
          for whl in /tmp/*.whl; do ${{ matrix.pyo3-python }} -m auditwheel repair $whl -w /io/dist; done
    - name: Store built wheels
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist/*

  test-linux-aarch64:
    runs-on: ubuntu-latest
    name: Test Linux Aarch64 wheels
    needs:
    - wheel-linux-aarch64
    strategy:
      matrix:
        include:
        - python-version: 3.6
          pyo3-python: /opt/python/cp36-cp36m/bin/python
          image-tag: latest
        - python-version: 3.7
          pyo3-python: /opt/python/cp37-cp37m/bin/python
          image-tag: latest
        - python-version: 3.8
          pyo3-python: /opt/python/cp38-cp38/bin/python
          image-tag: latest
        - python-version: 3.9
          pyo3-python: /opt/python/cp39-cp39/bin/python
          image-tag: latest
        - python-version: '3.10'
          pyo3-python: /opt/python/cp310-cp310/bin/python
          image-tag: latest
    steps:
    - name: Download built wheels
      uses: actions/download-artifact@v2
      with:
          name: dist
          path: dist
    - name: Set up QEMU
      id: qemu
      uses: docker/setup-qemu-action@v1
    - name: Test built wheels
      uses: addnab/docker-run-action@v2
      with:
        image: quay.io/pypa/manylinux2014_aarch64:${{ matrix.image-tag }}
        options: -v ${{ github.workspace }}:/io -e TERM=$TERM
        shell: bash
        run: |
          ${{ matrix.pyo3-python }} -m pip install pyrodigal --no-index --find-links=/io/dist
          ${{ matrix.pyo3-python }} -m unittest pyrodigal.tests -vv

  wheel-osx:
    runs-on: macos-latest
    name: Build OSX wheels
    strategy:
      matrix:
        python-version:
        - 3.5
        - 3.6
        - 3.7
        - 3.8
        - 3.9
        - '3.10'
        - pypy-3.7
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Python requirements
      run: python -m pip install -r .github/workflows/requirements.txt
    - name: Build Cython extension
      run: python setup.py build_ext
    - name: Build wheel distribution
      run: python setup.py bdist_wheel
    - name: Store built wheels
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist/*

  test-osx:
    runs-on: macos-latest
    name: Test OSX wheels
    needs:
    - wheel-osx
    strategy:
      matrix:
        python-version:
        - 3.5
        - 3.6
        - 3.7
        - 3.8
        - 3.9
        - '3.10'
        - pypy-3.7
    steps:
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Download built wheels
      uses: actions/download-artifact@v2
      with:
          name: dist
          path: dist
    - name: Install built wheel
      run: python -m pip install --no-index --find-links=dist pyrodigal
    - name: Run tests without coverage
      run: python -m unittest pyrodigal.tests -vv

  wheel-windows:
    runs-on: windows-latest
    name: Build Windows wheels
    strategy:
      matrix:
        python-version:
        - 3.5
        - 3.6
        - 3.7
        - 3.8
        - 3.9
        - '3.10'
        #- pypy-3.6
        - pypy-3.7
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - name: Install Python requirements
      run: python -m pip install -r .github/workflows/requirements.txt
    - name: Build wheel distribution
      run: python setup.py bdist_wheel
    - name: Store built wheels
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist/*

  test-windows:
    runs-on: windows-latest
    name: Test Windows wheels
    needs:
    - wheel-windows
    strategy:
      matrix:
        python-version:
        - 3.5
        - 3.6
        - 3.7
        - 3.8
        - 3.9
        - '3.10'
        #- pypy-3.6
        - pypy-3.7
    steps:
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Download built wheels
      uses: actions/download-artifact@v2
      with:
          name: dist
          path: dist
    - name: Install built wheel
      run: python -m pip install --no-index --find-links=dist pyrodigal
    - name: Run tests without coverage
      run: python -m unittest pyrodigal.tests -vv

  sdist:
    runs-on: ubuntu-latest
    name: Build source distribution
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install build requirements
      run: python -m pip install -r .github/workflows/requirements.txt
    - name: Build source distribution
      run: python setup.py sdist
    - name: Store built source distribution
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist/*

  upload:
    environment: PyPI
    runs-on: ubuntu-latest
    name: Upload
    needs:
    - sdist
    - wheel-linux
    - test-linux
    - wheel-linux-aarch64
    - test-linux-aarch64
    - wheel-osx
    - test-osx
    - wheel-windows
    - test-windows
    steps:
    - name: Download built wheels
      uses: actions/download-artifact@v2
      with:
          name: dist
          path: dist
    - name: Publish distributions to PyPI
      if: startsWith(github.ref, 'refs/tags/v')
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip_existing: false

  release:
    environment: GitHub Releases
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/v')"
    name: Release
    needs: upload
    steps:
    - name: Checkout code
      uses: actions/checkout@v1
      with:
        submodules: true
    - name: Release a Changelog
      uses: rasmus-saks/release-a-changelog-action@v1.0.1
      with:
        github-token: '${{ secrets.GITHUB_TOKEN }}'
